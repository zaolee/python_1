# 소리가 컴퓨터에 저장될 때에는 디지털 데이터화 되어 저장된다. 마이크를 통해 1초에 적게는 수십 번, 많게는 수만 번 소리의 강약을 체크하고,
# 한 번씩 체크할 때 마다 그 값을 정수값으로 바꾸어 저장하는 방식으로 소리를 파일로 저장할 수 있다.
# 1초 동안 마이크로 소리강약을 체크하는 횟수를 h (헤르쯔, Hz 는 1초에 몇 번? 체크하는가를 의미한다.)
# 한 번 체크한 값을 저장할 때 사용하는 비트수를 b (2비트를 사용하면 0 또는 1 두 가지, 16비트를 사용하면 65536가지..)
# 좌우 등 소리를 저장할 트랙 개수인 채널 개수를 c (모노는 1개, 스테레오는 2개의 트랙으로 저장함을 의미한다.)
# 녹음할 시간(초) s가 주어질 때, 필요한 저장 용량을 계산하는 프로그램을 작성해보자. 
# 실제로, 일반적인 CD 음질(44.1KHz, 16bit, 스테레오)로 1초 동안 저장하려면 44100 * 16 * 2 * 1 bit의 저장공간이 필요한데, 44100*16*2*1/8/1024/1024 로 계산하면 약 0.168 MB 정도가 필요하다.
# 이렇게 녹음하는 방식을 PCM(Pulse Code Modulation) 방법이라고 하는데, 압축하지 않은 순수한(raw) 소리 데이터 파일은 대표적으로 *.wav 가 있다.
#  8 bit(비트) = 1byte(바이트), 1024 Byte(210 byte) = 1KB(킬로 바이트), 1024 KB(210 KB)= 1MB(메가 바이트), 1024 MB(210 MB)= 1GB(기가 바이트), 1024 GB(210 GB)      = 1TB(테라 바이트)
# h, b, c, s 가 공백을 두고 입력된다. h는 48,000이하, b는 32이하(단, 8의배수), c는 5이하, s는 6,000이하의 자연수이다.
# 필요한 저장 공간을 MB 단위로 바꾸어 출력한다. 단, 소수점 첫째 자리까지의 정확도로 출력하고 MB를 공백을 두고 출력한다.

# 해결: 일단 input 써서 h b c s의 값을 입력하게끔 하기. 그담 네가지 값 다 곱한다음. 8,  1024,  1024 나누기?? 그리고 소수점 첫째자리까지 출력하기

h, b, c, s = input("순서대로 h, b, c, s의 값을 입력하세요").split()

h = int(h)
b = int(b)
c = int(c)
s = int(s)

vvv = h*b*c*s/8/1024/1024

vvvround = round(vvv, 1)

print(vvvround, "MB")

# round 반올림 함수
# round(해당변수(값), 반올림할 n번째 수 입력하기 )
# 여기서 n = 1 이면 소수 첫째자리, 2면 소수 둘째자리...
# n = -1 일경우에는 10의 자리에서 반올림이란 뜻
# 그냥 반올림 할 값을 기재 안하면 일의자리에서 반올림 됨.
